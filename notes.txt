This section is for writing important notes.

# Operators are of four types Assignment , Logical , Comparision and Logical

# Assignment : += , -= , = etc.
# Logical : and or not
# Comparision: == , != , < , > , <= , >= etc.
# Arithmatic : + , - , * , / etc.

--------------------------------------------------------------------------------------------------------------------------

***
String is an immutable data types that stores values in quotes
string slicing = [start : stop : step] (start to stop - 1)

Most used String Functions :

print(str[-4 : -1])

print(str[1 : 4])

print(str.endswith("78"))

print(len(str))    >>> returns number of characters in string

print(str.upper())  >>> uppercase the string

print(str.lower())   >>> lowercase the string

print(str.title())   >>> uppercase first letter of each char in string

print(str.strip())   >>> removes whitespaces 

print(str.split(","))  >>> splits the string based on specified character

print(str.replace("second" , "2nd"))  >>> replace old char wit new char

print(str.find("."))  >>> returns the index of "char"

print(str.find("9"))

print(str.count("E"))  >>> return the count of "char" in string

print(str.isalnum())



ESCAPE SEQUENCE CHARACTERS : 
>> \n = new line
>> \t = tab like space
>> \' \" = add single or double quotes
>> \0 = null character

------------------------------------------------------------------------------------------------------------------------- 
***
PYTHON LISTS: 
Python list are mutable data type i.e. their vaules can be changed
List are containers to store values of any data type
List indexing is same as String indexing
Lists are encllosed in Square Brackets

Some of most used List methods are :

append() - Adds an item to the end of the list.
extend() - Extends the list by appending elements from another iterable.
insert() - Inserts an item at a specified position.
remove() - Removes the first occurrence of a specified value.
pop() - Removes and returns the item at a specified index (default is the last item).
clear() - Removes all items from the list.
index() - Returns the index of the first occurrence of a specified value.
count() - Returns the number of occurrences of a specified value in the list.
sort() - Sorts the list in ascending order by default (can be customized).
reverse() - Reverses the order of the list in place.
copy() - Returns a shallow copy of the list.

----------------------------------------------------------------------------------------------------------------------
***
Python Tuples : Immutable , store any data type values in () 

Tuple Methods : 
count() - Returns the number of times a specified value appears in the tuple.
index() - Returns the index of the first occurrence of a specified value.

Operations on Tuple:
Indexing - Access elements of a tuple using their index.
Slicing - Extract a portion of the tuple using slicing.
Concatenation - Combine two or more tuples into one.
Repetition - Repeat the elements of a tuple multiple times.
Membership - Check if an element exists in a tuple using in.
Iteration - Loop through the elements of a tuple using a for loop.
Length - Find the number of elements in a tuple using len().
Minimum and Maximum - Find the smallest or largest element in a tuple using min() and max().
Sum - Calculate the sum of all numeric elements in a tuple using sum().
Sorting - Sort the elements of a tuple using sorted() (returns a list).
Unpacking - Assign elements of a tuple to variables.
Nesting - Create tuples within tuples.

Most of List and Tuple operations are same except changing in Tuples as Tuples are IMMUTABLE.
 -------------------------------------------------------------------------------------------------------------------

 ***
 Python Dictionary : Mutable , Unordered , Indexed , "Key":Value pairs , each key in Unique , enclosed in {curley braces}

 Dict_Methods : 
 
get() - Returns the value of a specified key.
pop() - Removes the specified key and returns the corresponding value.
popitem() - Removes and returns the last inserted key-value pair.
keys() - Returns a view object containing all the keys.
values() - Returns a view object containing all the values.
items() - Returns a view object containing all key-value pairs as tuples.
clear() - Removes all items from the dictionary.
copy() - Returns a shallow copy of the dictionary.
fromkeys() - Creates a new dictionary with specified keys and a default value.
setdefault() - Returns the value of a key. If the key does not exist, it adds the key with a specified default value.
update() - Updates the dictionary with elements from another dictionary or iterable.

Operations on Dictionary : 

Adding Items - Add a key-value pair to the dictionary.
Updating Values - Modify the value of an existing key.
Accessing Items - Access the value of a key using dict[key] or get().
Removing Items - Remove key-value pairs using pop() or popitem().
Checking Membership - Check if a key exists in the dictionary using in.
Iterating Keys - Loop through all keys in the dictionary using for key in dict.keys().
Iterating Values - Loop through all values in the dictionary using for value in dict.values().
Iterating Key-Value Pairs - Loop through all key-value pairs using for key, value in dict.items().
Clearing Dictionary - Remove all items using clear().
Copying Dictionary - Create a copy of the dictionary using copy().
Merging Dictionaries - Merge two dictionaries using update().
 
 ---------------------------------------------------------------------------------------------------------------

